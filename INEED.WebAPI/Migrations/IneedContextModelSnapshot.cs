// <auto-generated />
using System;
using INEED.WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace INEED.WebAPI.Migrations
{
    [DbContext(typeof(IneedContext))]
    partial class IneedContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("INEED.WebAPI.Models.Customer", b =>
                {
                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(7, 5)
                        .HasColumnType("decimal(7,5)")
                        .HasColumnName("latitude");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(8, 5)
                        .HasColumnType("decimal(8,5)")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("name");

                    b.HasKey("PhoneNumber")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.ToTable("customers");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("content");

                    b.Property<bool?>("IsSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isSent")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("ReceiverPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("receiverPhone");

                    b.Property<string>("SenderPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("senderPhone");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ReceiverPhone" }, "receiverPhone");

                    b.HasIndex(new[] { "SenderPhone" }, "senderPhone");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("varchar(10000)")
                        .HasColumnName("content");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("customerPhone");

                    b.Property<byte[]>("Image")
                        .HasColumnType("longblob")
                        .HasColumnName("image");

                    b.Property<bool?>("IsSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isSent")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time");

                    b.Property<string>("WorkerPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("workerPhone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CustomerPhone" }, "customerPhone");

                    b.HasIndex(new[] { "WorkerPhone" }, "workerPhone");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)")
                        .HasColumnName("categoryId");

                    b.Property<string>("Details")
                        .HasColumnType("text")
                        .HasColumnName("details");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("image");

                    b.Property<decimal>("Price")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("price");

                    b.Property<decimal?>("Rate")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)")
                        .HasColumnName("rate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryId" }, "categoryId");

                    b.ToTable("properties");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.PropertyCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("parentId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ParentId" }, "parentId");

                    b.ToTable("propertyCategories");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.ServiceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("parentId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ParentId" }, "parentId")
                        .HasDatabaseName("parentId1");

                    b.ToTable("serviceCategories");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.ServiceProvider", b =>
                {
                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(7, 5)
                        .HasColumnType("decimal(7,5)")
                        .HasColumnName("latitude");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(8, 5)
                        .HasColumnType("decimal(8,5)")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("name");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("nationalId");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("longblob")
                        .HasColumnName("profilePicture");

                    b.Property<decimal?>("Rate")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)")
                        .HasColumnName("rate");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("serviceId");

                    b.HasKey("PhoneNumber")
                        .HasName("PRIMARY");

                    b.HasIndex("ServiceId")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique()
                        .HasDatabaseName("email1");

                    b.HasIndex(new[] { "ServiceId" }, "serviceId");

                    b.ToTable("serviceProviders");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.Unique", b =>
                {
                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.HasKey("PhoneNumber")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique()
                        .HasDatabaseName("email2");

                    b.HasIndex(new[] { "PhoneNumber" }, "phoneNumber")
                        .IsUnique();

                    b.ToTable("uniques");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.Customer", b =>
                {
                    b.HasOne("INEED.WebAPI.Models.Unique", "EmailNavigation")
                        .WithOne("CustomerEmailNavigation")
                        .HasForeignKey("INEED.WebAPI.Models.Customer", "Email")
                        .HasPrincipalKey("INEED.WebAPI.Models.Unique", "Email")
                        .IsRequired()
                        .HasConstraintName("customers_ibfk_2");

                    b.HasOne("INEED.WebAPI.Models.Unique", "PhoneNumberNavigation")
                        .WithOne("CustomerPhoneNumberNavigation")
                        .HasForeignKey("INEED.WebAPI.Models.Customer", "PhoneNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("customers_ibfk_1");

                    b.Navigation("EmailNavigation");

                    b.Navigation("PhoneNumberNavigation");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.Message", b =>
                {
                    b.HasOne("INEED.WebAPI.Models.ServiceProvider", "ReceiverPhoneNavigation")
                        .WithMany("Messages")
                        .HasForeignKey("ReceiverPhone")
                        .IsRequired()
                        .HasConstraintName("messages_ibfk_2");

                    b.HasOne("INEED.WebAPI.Models.Customer", "SenderPhoneNavigation")
                        .WithMany("Messages")
                        .HasForeignKey("SenderPhone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("messages_ibfk_1");

                    b.Navigation("ReceiverPhoneNavigation");

                    b.Navigation("SenderPhoneNavigation");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.Order", b =>
                {
                    b.HasOne("INEED.WebAPI.Models.Customer", "CustomerPhoneNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerPhone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("orders_ibfk_1");

                    b.HasOne("INEED.WebAPI.Models.ServiceProvider", "WorkerPhoneNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("WorkerPhone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("orders_ibfk_2");

                    b.Navigation("CustomerPhoneNavigation");

                    b.Navigation("WorkerPhoneNavigation");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.Property", b =>
                {
                    b.HasOne("INEED.WebAPI.Models.PropertyCategory", "Category")
                        .WithMany("Properties")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("properties_ibfk_1");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.PropertyCategory", b =>
                {
                    b.HasOne("INEED.WebAPI.Models.PropertyCategory", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("propertyCategories_ibfk_1");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.ServiceCategory", b =>
                {
                    b.HasOne("INEED.WebAPI.Models.ServiceCategory", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("serviceCategories_ibfk_1");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.ServiceProvider", b =>
                {
                    b.HasOne("INEED.WebAPI.Models.Unique", "EmailNavigation")
                        .WithOne("ServiceProviderEmailNavigation")
                        .HasForeignKey("INEED.WebAPI.Models.ServiceProvider", "Email")
                        .HasPrincipalKey("INEED.WebAPI.Models.Unique", "Email")
                        .IsRequired()
                        .HasConstraintName("serviceProviders_ibfk_3");

                    b.HasOne("INEED.WebAPI.Models.Unique", "PhoneNumberNavigation")
                        .WithOne("ServiceProviderPhoneNumberNavigation")
                        .HasForeignKey("INEED.WebAPI.Models.ServiceProvider", "PhoneNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("serviceProviders_ibfk_2");

                    b.HasOne("INEED.WebAPI.Models.ServiceCategory", "Service")
                        .WithOne("ServiceProvider")
                        .HasForeignKey("INEED.WebAPI.Models.ServiceProvider", "ServiceId")
                        .IsRequired()
                        .HasConstraintName("serviceProviders_ibfk_1");

                    b.Navigation("EmailNavigation");

                    b.Navigation("PhoneNumberNavigation");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.Customer", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.PropertyCategory", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.ServiceCategory", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("ServiceProvider")
                        .IsRequired();
                });

            modelBuilder.Entity("INEED.WebAPI.Models.ServiceProvider", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("INEED.WebAPI.Models.Unique", b =>
                {
                    b.Navigation("CustomerEmailNavigation")
                        .IsRequired();

                    b.Navigation("CustomerPhoneNumberNavigation")
                        .IsRequired();

                    b.Navigation("ServiceProviderEmailNavigation")
                        .IsRequired();

                    b.Navigation("ServiceProviderPhoneNumberNavigation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
